     1                                  [org 0x7C00]
     2                                  [bits 16]
     3                                  
     4                                  ; 主引导记录入口
     5                                  start:
     6 00000000 EA[0500]0000                jmp 0x0000:real_mode_init  ; 确保CS=0
     7                                  
     8                                  real_mode_init:
     9                                      ; 初始化段寄存器
    10 00000005 31C0                        xor ax, ax
    11 00000007 8ED8                        mov ds, ax
    12 00000009 8EC0                        mov es, ax
    13 0000000B 8ED0                        mov ss, ax
    14 0000000D BC007C                      mov sp, 0x7C00
    15                                  
    16                                      ; 打印实模式提示
    17 00000010 BE[6E01]                    mov si, msg_real_mode
    18 00000013 E82100                      call print_16
    19                                  
    20                                      ; 加载GDT并切换到保护模式
    21 00000016 0F0116[7002]                lgdt [gdtr]
    22 0000001B BE[8101]                    mov si, msg_gdt_loaded
    23 0000001E E81600                      call print_16
    24                                  
    25                                      ; 关闭中断
    26 00000021 FA                          cli
    27                                  
    28                                      ; 启用保护模式
    29 00000022 0F20C0                      mov eax, cr0
    30 00000025 6683C801                    or eax, 1
    31 00000029 0F22C0                      mov cr0, eax
    32 0000002C BE[9501]                    mov si, msg_protected_mode
    33 0000002F E80500                      call print_16
    34                                  
    35                                      ; 远跳转清空流水线
    36 00000032 EA[4300]0800                jmp 0x08:protected_mode_entry
    37                                  
    38                                  ; 16位实模式打印函数
    39                                  print_16:
    40 00000037 AC                          lodsb
    41 00000038 08C0                        or al, al
    42 0000003A 7406                        jz .done
    43 0000003C B40E                        mov ah, 0x0E
    44 0000003E CD10                        int 0x10
    45 00000040 EBF5                        jmp print_16
    46                                  .done:
    47 00000042 C3                          ret
    48                                  
    49                                  [bits 32]
    50                                  protected_mode_entry:
    51                                      ; 设置保护模式段寄存器
    52 00000043 66B81000                    mov ax, 0x10
    53 00000047 8ED8                        mov ds, ax
    54 00000049 8EC0                        mov es, ax
    55 0000004B 8ED0                        mov ss, ax
    56 0000004D BC007C0000                  mov esp, 0x7C00
    57                                  
    58                                      ; 打印保护模式提示
    59 00000052 BE[B5010000]                mov esi, msg_32bit_mode
    60 00000057 E869000000                  call print_32
    61                                  
    62                                      ; 检查是否支持长模式
    63 0000005C B801000080                  mov eax, 0x80000001
    64 00000061 0FA2                        cpuid
    65 00000063 F7C200000020                test edx, (1 << 29)
    66 00000069 0F84F3000000                jz no_long_mode
    67                                  
    68                                      ; 初始化页表
    69 0000006F E863000000                  call setup_paging
    70 00000074 BE[D4010000]                mov esi, msg_paging_ready
    71 00000079 E847000000                  call print_32
    72                                  
    73                                      ; 启用PAE
    74 0000007E 0F20E0                      mov eax, cr4
    75 00000081 83C820                      or eax, (1 << 5)
    76 00000084 0F22E0                      mov cr4, eax
    77 00000087 BE[F2010000]                mov esi, msg_pae_enabled
    78 0000008C E834000000                  call print_32
    79                                  
    80                                      ; 设置EFER.LME
    81 00000091 B9800000C0                  mov ecx, 0xC0000080
    82 00000096 0F32                        rdmsr
    83 00000098 0D00010000                  or eax, (1 << 8)
    84 0000009D 0F30                        wrmsr
    85 0000009F BE[07020000]                mov esi, msg_lme_enabled
    86 000000A4 E81C000000                  call print_32
    87                                  
    88                                      ; 启用分页
    89 000000A9 0F20C0                      mov eax, cr0
    90 000000AC 0D00000080                  or eax, (1 << 31)
    91 000000B1 0F22C0                      mov cr0, eax
    92 000000B4 BE[1D020000]                mov esi, msg_paging_enabled
    93 000000B9 E807000000                  call print_32
    94                                  
    95                                      ; 跳转到64位模式
    96 000000BE EA[2F010000]0800            jmp 0x08:long_mode_entry
    97                                  
    98                                  ; 32位保护模式打印函数
    99                                  print_32:
   100 000000C5 BA00800B00                  mov edx, 0xB8000  ; 文本模式显存地址
   101                                  .loop:
   102 000000CA AC                          lodsb
   103 000000CB 08C0                        or al, al
   104 000000CD 7407                        jz .done
   105 000000CF 8802                        mov [edx], al
   106 000000D1 83C202                      add edx, 2
   107 000000D4 EBF4                        jmp .loop
   108                                  .done:
   109 000000D6 C3                          ret
   110                                  
   111                                  ; 页表初始化（恒等映射低1GB + 高端映射）
   112                                  setup_paging:
   113                                      ; 清零页表区域（0x1000-0x6000）
   114 000000D7 BF00100000                  mov edi, 0x1000
   115 000000DC B900140000                  mov ecx, (0x6000 - 0x1000) / 4
   116 000000E1 31C0                        xor eax, eax
   117 000000E3 F3AB                        rep stosd
   118                                  
   119                                      ; 设置PML4（0x1000）
   120 000000E5 BF00100000                  mov edi, 0x1000
   121 000000EA 8D8700100000                lea eax, [edi + 0x1000]  ; 指向PDP
   122 000000F0 83C803                      or eax, 0b11             ; Present + Writable
   123 000000F3 8907                        mov [edi], eax           ; PML4[0]
   124 000000F5 898700080000                mov [edi + 256 * 8], eax ; PML4[256]（映射到0xFFFF800000000000）
   125                                  
   126                                      ; 设置PDP（0x2000）
   127 000000FB BF00200000                  mov edi, 0x2000
   128 00000100 8D8700100000                lea eax, [edi + 0x1000]  ; 指向PD
   129 00000106 83C803                      or eax, 0b11
   130 00000109 8907                        mov [edi], eax
   131                                  
   132                                      ; 设置PD（0x3000，2MB大页）
   133 0000010B BF00300000                  mov edi, 0x3000
   134 00000110 B883000000                  mov eax, 0x00000083      ; Present + Writable + 2MB页
   135 00000115 B900020000                  mov ecx, 512             ; 映射1GB
   136                                  .fill_pd:
   137 0000011A 8907                        mov [edi], eax
   138 0000011C 0500002000                  add eax, 0x200000
   139 00000121 83C708                      add edi, 8
   140 00000124 E2F4                        loop .fill_pd
   141                                  
   142                                      ; 设置CR3
   143 00000126 B800100000                  mov eax, 0x1000
   144 0000012B 0F22D8                      mov cr3, eax
   145 0000012E C3                          ret
   146                                  
   147                                  [bits 64]
   148                                  long_mode_entry:
   149                                      ; 设置64位段寄存器
   150 0000012F 66B81000                    mov ax, 0x10
   151 00000133 8ED8                        mov ds, ax
   152 00000135 8EC0                        mov es, ax
   153 00000137 8ED0                        mov ss, ax
   154 00000139 BC007C0000                  mov rsp, 0x7C00
   155                                  
   156                                      ; 打印64位模式提示
   157 0000013E 48BE-                       mov rsi, msg_64bit_mode
   157 00000140 [3502000000000000] 
   158 00000148 E802000000                  call print_64
   159                                  
   160                                      ; 在此添加内核加载代码...
   161 0000014D EBFE                        jmp $
   162                                  
   163                                  ; 64位模式打印函数
   164                                  print_64:
   165 0000014F BB00800B00                  mov rbx, 0xB8000
   166                                  .loop:
   167 00000154 AC                          lodsb
   168 00000155 08C0                        or al, al
   169 00000157 7408                        jz .done
   170 00000159 8803                        mov [rbx], al
   171 0000015B 4883C302                    add rbx, 2
   172 0000015F EBF3                        jmp .loop
   173                                  .done:
   174 00000161 C3                          ret
   175                                  
   176                                  no_long_mode:
   177 00000162 BE[4F020000]                mov esi, msg_no_long_mode
   178 00000167 E859FFFFFF                  call print_32
   179 0000016C EBFE                        jmp $
   180                                  
   181                                  ; 数据区
   182 0000016E 5B31362D6269745D20-     msg_real_mode        db "[16-bit] Real Mode", 0
   182 00000177 5265616C204D6F6465-
   182 00000180 00                 
   183 00000181 5B31362D6269745D20-     msg_gdt_loaded       db "[16-bit] GDT Loaded", 0
   183 0000018A 474454204C6F616465-
   183 00000193 6400               
   184 00000195 5B31362D6269745D20-     msg_protected_mode   db "[16-bit] Protected Mode Enabled", 0
   184 0000019E 50726F746563746564-
   184 000001A7 204D6F646520456E61-
   184 000001B0 626C656400         
   185 000001B5 5B33322D6269745D20-     msg_32bit_mode       db "[32-bit] Protected Mode Active", 0
   185 000001BE 50726F746563746564-
   185 000001C7 204D6F646520416374-
   185 000001D0 69766500           
   186 000001D4 5B33322D6269745D20-     msg_paging_ready     db "[32-bit] 4-Level Paging Ready", 0
   186 000001DD 342D4C6576656C2050-
   186 000001E6 6167696E6720526561-
   186 000001EF 647900             
   187 000001F2 5B33322D6269745D20-     msg_pae_enabled      db "[32-bit] PAE Enabled", 0
   187 000001FB 50414520456E61626C-
   187 00000204 656400             
   188 00000207 5B33322D6269745D20-     msg_lme_enabled      db "[32-bit] EFER.LME Set", 0
   188 00000210 454645522E4C4D4520-
   188 00000219 53657400           
   189 0000021D 5B33322D6269745D20-     msg_paging_enabled   db "[32-bit] Paging Enabled", 0
   189 00000226 506167696E6720456E-
   189 0000022F 61626C656400       
   190 00000235 5B36342D6269745D20-     msg_64bit_mode       db "[64-bit] Long Mode Active", 0
   190 0000023E 4C6F6E67204D6F6465-
   190 00000247 2041637469766500   
   191 0000024F 5B4552524F525D2043-     msg_no_long_mode     db "[ERROR] CPU不支持长模式", 0
   191 00000258 5055E4B88DE694AFE6-
   191 00000261 8C81E995BFE6A8A1E5-
   191 0000026A BC8F00             
   192                                  
   193                                  ; GDT定义
   194 0000026D 90<rep 3h>              align 8
   195                                  gdtr:
   196 00000270 1700                        dw gdt_end - gdt - 1
   197 00000272 [76020000]                  dd gdt
   198                                  
   199                                  gdt:
   200 00000276 0000000000000000            dq 0x0000000000000000  ; 空描述符
   201 0000027E FFFF0000009ACF00            dq 0x00CF9A000000FFFF  ; 代码段（32/64位）
   202 00000286 FFFF00000092CF00            dq 0x00CF92000000FFFF  ; 数据段
   203                                  gdt_end:
   204                                  
   205                                  ; 填充MBR
   206                                  times 510 - ($ - $$) db 0
   206          ******************       error: TIMES value -144 is negative
   207 0000028E 55AA                    dw 0xAA55

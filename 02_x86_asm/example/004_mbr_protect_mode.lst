     1                                  [bits 16]                ; 16位实模式
     2                                  [org 0x7C00]             ; BIOS 加载到 0x7C00
     3                                  
     4 00000000 EB26                    jmp start
     5                                  
     6                                  ; --------------------------
     7                                  ; GDT（全局描述符表）
     8                                  ; --------------------------
     9                                  gdt_start:
    10                                      ; 第一个描述符必须是 NULL 描述符（GDT 规范）
    11 00000002 00000000                    dd 0x00000000        ; 基址=0, 界限=0
    12 00000006 00000000                    dd 0x00000000
    13                                  
    14                                      ; 代码段描述符（可执行、可读、32位）
    15                                  gdt_code:
    16 0000000A FFFF                        dw 0xFFFF            ; 段界限 (0-15)
    17 0000000C 0000                        dw 0x0000            ; 基址 (0-15)
    18 0000000E 00                          db 0x00              ; 基址 (16-23)
    19 0000000F 9A                          db 0b10011010        ; P=1, DPL=0, S=1, Type=1010 (代码段，可读)
    20 00000010 CF                          db 0b11001111        ; G=1 (4KB粒度), D/B=1 (32位), AVL=0, 段界限 (16-19)
    21 00000011 00                          db 0x00              ; 基址 (24-31)
    22                                  
    23                                      ; 数据段描述符（可读、可写、32位）
    24                                  gdt_data:
    25 00000012 FFFF                        dw 0xFFFF            ; 段界限 (0-15)
    26 00000014 0000                        dw 0x0000            ; 基址 (0-15)
    27 00000016 00                          db 0x00              ; 基址 (16-23)
    28 00000017 92                          db 0b10010010        ; P=1, DPL=0, S=1, Type=0010 (数据段，可写)
    29 00000018 CF                          db 0b11001111        ; G=1, D/B=1, AVL=0, 段界限 (16-19)
    30 00000019 00                          db 0x00              ; 基址 (24-31)
    31                                  
    32                                      ; 栈段描述符（可读、可写、32位）
    33                                  gdt_stack:
    34 0000001A FFFF                        dw 0xFFFF            ; 段界限 (0-15)
    35 0000001C 0000                        dw 0x0000            ; 基址 (0-15)
    36 0000001E 00                          db 0x00              ; 基址 (16-23)
    37 0000001F 92                          db 0b10010010        ; P=1, DPL=0, S=1, Type=0010 (数据段，可写)
    38 00000020 CF                          db 0b11001111        ; G=1, D/B=1, AVL=0, 段界限 (16-19)
    39 00000021 00                          db 0x00              ; 基址 (24-31)
    40                                  
    41                                  gdt_end:
    42                                  
    43                                  ; --------------------------
    44                                  ; GDT 描述符（用于 lgdt 指令）
    45                                  ; --------------------------
    46                                  gdt_descriptor:
    47 00000022 1F00                        dw gdt_end - gdt_start - 1    ; GDT 大小（16位）
    48 00000024 [02000000]                  dd gdt_start                  ; GDT 基址（32位）
    49                                  
    50                                  ; 定义段选择子（Selector）
    51                                  CODE_SEG equ gdt_code - gdt_start
    52                                  DATA_SEG equ gdt_data - gdt_start
    53                                  STACK_SEG equ gdt_stack - gdt_start
    54                                  
    55                                  ; --------------------------
    56                                  ; 主程序（从实模式切换到保护模式）
    57                                  ; --------------------------
    58                                  start:
    59                                      ; 初始化段寄存器
    60 00000028 31C0                        xor ax, ax
    61 0000002A 8ED8                        mov ds, ax
    62 0000002C 8EC0                        mov es, ax
    63 0000002E 8ED0                        mov ss, ax
    64 00000030 BC007C                      mov sp, 0x7C00      ; 栈指针初始化
    65                                  
    66                                      ; 1. 禁用中断（防止模式切换时发生中断）
    67 00000033 FA                          cli
    68                                  
    69                                      ; 2. 加载 GDT
    70 00000034 0F0116[2200]                lgdt [gdt_descriptor]
    71                                  
    72                                      ; 3. 打开 A20 地址线（Fast A20 方法）
    73 00000039 E492                        in al, 0x92
    74 0000003B 0C02                        or al, 0x02
    75 0000003D E692                        out 0x92, al
    76                                  
    77                                      ; 4. 设置 CR0.PE 位，进入保护模式
    78 0000003F 0F20C0                      mov eax, cr0
    79 00000042 6683C801                    or eax, 0x1
    80 00000046 0F22C0                      mov cr0, eax
    81                                  
    82                                      ; 5. 远跳转（刷新流水线，更新 CS）
    83 00000049 EA[4E00]0800                jmp CODE_SEG:protected_mode
    84                                  
    85                                  ; --------------------------
    86                                  ; 32位保护模式代码
    87                                  ; --------------------------
    88                                  [bits 32]
    89                                  protected_mode:
    90                                      ; 初始化段寄存器
    91 0000004E 66B81000                    mov ax, DATA_SEG
    92 00000052 8ED8                        mov ds, ax
    93 00000054 8EC0                        mov es, ax
    94 00000056 8EE0                        mov fs, ax
    95 00000058 8EE8                        mov gs, ax
    96 0000005A 8ED0                        mov ss, ax
    97 0000005C BC007C0000                  mov esp, 0x7C00      ; 32位栈指针
    98                                  
    99                                      ; 保护模式下打印消息（示例：向屏幕输出字符）
   100 00000061 BE[7C000000]                mov esi, msg
   101 00000066 BF00800B00                  mov edi, 0xB8000     ; 显存地址（文本模式）
   102 0000006B B40F                        mov ah, 0x0F         ; 白字黑底
   103                                  
   104                                  .print_char:
   105 0000006D AC                          lodsb                ; 加载字符到 AL
   106 0000006E 84C0                        test al, al
   107 00000070 7408                        jz .done             ; 如果遇到 0，结束
   108 00000072 668907                      mov [edi], ax        ; 写入显存
   109 00000075 83C702                      add edi, 2
   110 00000078 EBF3                        jmp .print_char
   111                                  
   112                                  .done:
   113 0000007A FA                          cli
   114 0000007B F4                          hlt                  ; 停机
   115                                  
   116 0000007C 48656C6C6F2C205072-     msg db "Hello, Protected Mode!", 0
   116 00000085 6F746563746564204D-
   116 0000008E 6F64652100         
   117                                  
   118                                  ; --------------------------
   119                                  ; 填充引导扇区
   120                                  ; --------------------------
   121 00000093 00<rep 16Bh>            times 510 - ($ - $$) db 0
   122 000001FE 55AA                    dw 0xAA55                ; 引导扇区标志
